@font-face{font-family:"Source Code Pro";src:url(../font/SourceCodePro-Regular.eot);src:url(../font/SourceCodePro-Regular.eot?#iefix) format("Source Code Pro"),url(../font/SourceCodePro-Regular.woff2) format("woff2"),url(../font/SourceCodePro-Regular.woff) format("woff"),url(../font/SourceCodePro-Regular.ttf) format("truetype"),url(../font/SourceCodePro-Regular.svg#svgFontName) format("svg");font-weight:400;font-style:normal}@font-face{font-family:"Source Code Pro";src:url(../font/SourceCodePro-Medium.eot);src:url(../font/SourceCodePro-Medium.eot?#iefix) format("Source Code Pro"),url(../font/SourceCodePro-Medium.woff2) format("woff2"),url(../font/SourceCodePro-Medium.woff) format("woff"),url(../font/SourceCodePro-Medium.ttf) format("truetype"),url(../font/SourceCodePro-Medium.svg#svgFontName) format("svg");font-weight:500;font-style:normal}@font-face{font-family:"Source Code Pro";src:url(../font/SourceCodePro-Bold.eot);src:url(../font/SourceCodePro-Bold.eot?#iefix) format("Source Code Pro"),url(../font/SourceCodePro-Bold.woff2) format("woff2"),url(../font/SourceCodePro-Bold.woff) format("woff"),url(../font/SourceCodePro-Bold.ttf) format("truetype"),url(../font/SourceCodePro-Bold.svg#svgFontName) format("svg");font-weight:600;font-style:normal}*,:after,:before{margin:0;padding:0;-webkit-box-sizing:inherit;box-sizing:inherit}a:active,a:focus{outline:0}body,html{height:100%}html{-webkit-box-sizing:border-box;box-sizing:border-box;scroll-behavior:smooth}a,body{color:#fff}body{background:#282c33;font-family:"Source Code Pro";-webkit-transition:.8s;-o-transition:.8s;transition:.8s}.visibility-hidden{display:none}a{text-decoration:none;-webkit-transition:.9s;-o-transition:.9s;transition:.9s}.btn-reset{background:0 0;padding:0;border:0;cursor:pointer}input[type=text]{font:inherit/inherit inherit;margin:0}ul{list-style:none}.hidden{display:none}.com-color,.main-nav__item span,.section-title span{color:#c778dd}.btn{border:1px solid #c778dd}.btn:hover{background:#c778dd}.wrapper{min-height:100px;overflow:hidden}.container{max-width:1054px;padding:0 15px;margin:0 auto}.link-arrow{font-weight:500;font-size:16px;line-height:21px;border:1px solid #c778dd;padding:8px 16px;margin-bottom:16px}.link-arrow::after{content:"<~>";display:inline-block;margin-left:12px}.link-arrow:active,.link-arrow:focus,.link-arrow:hover{background:rgba(199,120,221,.2)}.section-title{font-weight:500;font-size:32px;line-height:42px}.section-title:after{content:"";display:inline-block;width:511px;border-top:2px solid #c778dd;margin-left:16px}.p-info{font-weight:400;font-size:16px;line-height:21px;color:#abb2bf}.active-link{color:#abb2bf!important}.header{min-height:61px;margin-bottom:62px}.header__row{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;min-height:61px}.hamburger-menu,.header__row{display:-webkit-box;display:-ms-flexbox;display:flex}.logo{z-index:100;width:72px;height:21px}.main-nav__list{display:-webkit-box;display:-ms-flexbox;display:flex}.main-nav__item{margin-right:32px}.main-nav__link{font-weight:500;font-size:16px;line-height:21px;color:#fff}.dropbtn:active,.dropbtn:focus,.dropbtn:hover,.dropdown-content a:active,.dropdown-content a:focus,.dropdown-content a:hover,.main-nav__link:active,.main-nav__link:focus,.main-nav__link:hover{color:#abb2bf}.dropdown{position:relative;display:inline-block}.dropbtn{font-weight:600;font-size:16px;line-height:21px;cursor:pointer;background:url(../img/arrow-down.svg) no-repeat right center;padding-right:4px;width:40px;-webkit-transition:.8s;-o-transition:.8s;transition:.8s}.dropdown-content{display:none;position:absolute;width:36px}.dropdown-content a{color:#fff;padding:3px 5px;text-decoration:none;display:block}.dropdown:hover .dropdown-content{display:block}#menu__toggle{opacity:0}.container,.hero{position:relative}.hero{display:-webkit-box;display:-ms-flexbox;display:flex;min-height:423px;margin-bottom:200px}.hero__content{padding-top:74px}.hero__title{font-weight:600;max-width:537px;font-size:32px;line-height:42px;margin-bottom:32px}.hero__text{width:463px;font-weight:400;font-size:16px;line-height:25px;color:#abb2bf;margin-bottom:24px}.hero__link,.hero__portfolio-info p{font-weight:500;font-size:16px;line-height:21px;padding:8px 16px}.hero__bg-art{position:absolute;top:0;right:0;width:469px;height:386px;background:url(../img/man.png) no-repeat center}.hero__portfolio-info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;margin-left:48px}.hero__portfolio-info p{position:relative;color:#abb2bf;border:1px solid #abb2bf;padding:6px 62px 8px 49px}.hero__portfolio-info p::before{content:"";position:absolute;display:block;top:9px;left:8px;margin:auto;width:16px;height:16px;background:#c778dd}.hero__portfolio-info span{color:#fff}.projects{position:relative;min-height:608px;margin-bottom:106px}.projects__link,.projects__title-row{display:-webkit-box;display:-ms-flexbox;display:flex}.projects__title-row{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:63.64px}.projects__link{-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-weight:500;font-size:16px;line-height:21px}.projects__link::after{content:"~~>";display:inline-block;margin-left:12px}.projects__link:active,.projects__link:focus,.projects__link:hover{color:#c778dd}.projects__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.projects-cart{max-width:335px;border:1px solid #abb2bf;min-height:391px;cursor:pointer;margin-bottom:10px}.projects-cart:hover{border:1px solid #c778dd}.projects-cart__img{-webkit-transition:.8s;-o-transition:.8s;transition:.8s}.projects-cart__img:hover{-webkit-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)}.projects-cart__list{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:8px}.projects-cart__item{font-weight:400;font-size:16px;line-height:21px;color:#abb2bf}.projects-cart__item:not(:last-child){margin-right:8px}.projects-cart__inf{border-top:1px solid #abb2bf;padding:16px}.projects-cart__title{font-weight:500;font-size:24px;line-height:31px;margin-bottom:16px}.projects-cart__text{font-weight:400;font-size:16px;line-height:21px;color:#abb2bf;margin-bottom:16px}.rear-details{position:absolute;border:1px solid #abb2bf}.projects__rear-details-one{width:91px;height:91px;left:1280px;top:550px}.projects__rear-details-two{width:155px;height:155px;left:1294px;top:1128px}.projects__rear-details-three{width:84px;height:84px;left:-360px;top:923px}.skills{position:relative;min-height:365px;margin-bottom:112px}.skills__title{margin-bottom:43px}.skills__info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.skills__info-cart{border:1px solid #abb2bf;max-width:200px}.skills__info-bloc:not(:last-child){margin-right:16px}.skills__info-cart:not(:last-child){margin-bottom:16px}.skills__info-cart h3{font-weight:600;font-size:16px;line-height:21px;padding:8px}.skills__info-cart ul{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;border-top:1px solid #abb2bf;padding:8px}.skills__info-cart li{font-weight:400;font-size:16px;line-height:21px;color:#abb2bf;margin:3px}.skills-rear-details{position:absolute;top:54px;left:32px;background:url(../img/skills-rear-details.svg);width:349px;height:283px}.about-me{position:relative;min-height:508px;margin-bottom:112px}.about-me__title{margin-bottom:48px}.about-me__inf{max-width:515px}.about-me__inf p{margin-bottom:25px}.about-me__link{font-weight:500;font-size:16px;line-height:21px;border:1px solid #c778dd;padding:8px 16px}.about-me__link:active,.about-me__link:focus,.about-me__link:hover{background:#c778dd}.about-me__link::after{content:"->";text-align:center;margin-left:10px}.about-me__rear-details{position:absolute;top:0;right:0;background:url(../img/about-me-man.png);width:339px;height:507px}.about-me__rear-details-one{width:155px;height:155px;right:1294px;top:2000px}.about-me__rear-details-two{width:155px;height:155px;left:1294px;top:2150px}.contacts{min-height:228px;margin-bottom:131px}.contacts__title{margin-bottom:45px}.contacts__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.contacts__info{max-width:505px;margin-bottom:30px}.contacts__message{border:1px solid #abb2bf;min-width:204px;min-height:141px}.contacts__message h3{font-weight:600;font-size:16px;line-height:21px;color:#fff;margin-bottom:16px}.contacts__message-content{padding:16px}.message__icon{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;width:143px;height:32px;font-weight:400;font-size:16px;line-height:21px;color:#abb2bf}.message__icon:not(:last-child){margin-bottom:8px}.message__icon:last-child{margin-bottom:2px}.message-ds::before{content:url(../img/Discord.svg);margin-right:5px}.message-mail::before{content:url(../img/Email.svg);margin-right:5px}.projects-title{margin-bottom:68px}.project-title{font-weight:600;font-size:32px;line-height:42px}.project-title span{color:#c778dd}.projects-title h1{margin-bottom:14px}.facts-wrapper p,.projects-span{font-size:16px;line-height:21px}.complete-apps{min-height:919px;margin-bottom:81px}.complete-apps__title{margin-bottom:48px}.projects__row--not-flex{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.projects__row--not-flex .projects-cart{margin-right:10px}.small-projects{min-height:828px;margin-bottom:173px}.small-projects__title{margin-bottom:48px}.small-projects__cart{min-height:232px}.about-me-content{margin-bottom:0}.about-me__info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-flex:wrap;-ms-flex:wrap;flex:wrap}.about-skills{margin-bottom:0}.facts{position:relative;margin-bottom:148px}.facts-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;max-width:624px}.facts-wrapper p{display:inline-block;color:#abb2bf;padding:8px;margin-bottom:16px;border:1px solid #abb2bf}.facts-wrapper p:not(:last-child){margin-right:10px}.facts__rear-details{position:absolute;top:68px;right:0;background:url(../img/my-fun-facts-group.svg);width:178px;height:170px}.footer{min-height:227px;border-top:1px solid #abb2bf}.footer__content{margin-top:32px}.footer__upper-part{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:21px}.footer__upper-part span{font-weight:400;font-size:16px;line-height:21px;color:#abb2bf}.footer__upper-part p{font-weight:500;font-size:24px;line-height:31px}.footer__logo{width:105px;height:31px}.footer__bottom-part{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.footer__bottom-part p{font-weight:400;font-size:16px;line-height:21px;max-width:476px}.footer__bottom-part,.footer__list{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__item img{width:32px;height:32px;-webkit-transition:.8s;-o-transition:.8s;transition:.8s}.footer__item img:hover{-webkit-transform:scale(1.3);-ms-transform:scale(1.3);transform:scale(1.3)}.footer__item:not(:last-child){margin-right:8px}@media screen and (max-width:1020px){.hero{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-height:423px;position:relative;margin-bottom:150px}.hero__content{margin-bottom:284px}.hero__portfolio-info{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start;margin-left:0}.hero__bg-art{position:absolute;top:310px;left:0;width:316px;height:260.08px;background:url(../img/media-man.png) no-repeat center}.projects__row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:distribute;justify-content:space-around}.projects-cart:not(:last-child){margin-bottom:30px}.skills-rear-details{display:none}.skills__info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.skills{margin-bottom:80px}}@media screen and (max-width:1020px) and (max-width:850px){.projects__title:after{display:none}}@media screen and (max-width:1000px){.header{margin-bottom:24px}}@media screen and (max-width:835px){.about-me__rear-details{display:none}}@media screen and (max-width:830px){.about-me-content{min-height:400px}}@media screen and (max-width:820px){.facts__rear-details{display:none}}@media screen and (max-width:600px){.menu__btn{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:fixed;top:40px;right:15px;width:26px;height:26px;cursor:pointer;z-index:30}.menu__box,.menu__btn>span,.menu__btn>span::after,.menu__btn>span::before{display:block;position:absolute;width:100%;height:2px;background-color:#616161}.menu__btn>span::before{content:"";top:-8px}.menu__btn>span::after{content:"";top:8px}.menu__box{position:fixed;visibility:hidden;top:0;left:-100%;height:100%;margin:0;padding:100px 15px;list-style:none;background-color:#282c33;-webkit-box-shadow:1px 0 6px rgba(0,0,0,.2);box-shadow:1px 0 6px rgba(0,0,0,.2);z-index:50}.menu__item{font-weight:400;font-size:32px;line-height:42px}.menu__item:active,.menu__item:focus,.menu__item:hover{color:#abb2bf}#menu__toggle:checked~.menu__btn>span{-webkit-transform:rotate(45deg);-ms-transform:rotate(45deg);transform:rotate(45deg)}#menu__toggle:checked~.menu__btn>span::before{top:0;-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)}#menu__toggle:checked~.menu__btn>span::after{top:0;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}#menu__toggle:checked~.menu__box{visibility:visible;left:0}.hamburger-menu{display:-webkit-box;display:-ms-flexbox;display:flex}.logo{z-index:100;width:72px;height:21px}.main-nav__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.main-nav__item{margin-right:0;margin-bottom:32px}.dropdown{position:absolute;top:32px;right:70px;display:inline-block}.dropbtn{font-weight:600;font-size:32px;line-height:42px;padding-right:10px;width:60px}.dropdown-content{display:none;position:absolute;width:60px}.dropdown-content a{font-size:25px;color:#fff;padding:3px 5px;text-decoration:none;display:block}}@media screen and (max-width:560px){.about-me__info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}@media screen and (max-width:490px){.hero__title{max-width:328px}.hero__bg-art{top:390px}.hero__text{max-width:328px}}@media screen and (max-width:400px){.skills__info{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.skills__info-cart{margin-bottom:15px}.footer__logo,.footer__upper-part span{margin-bottom:20px}.footer__bottom-part,.footer__upper-part{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.footer__upper-part p{font-weight:500;font-size:24px;line-height:31px}.footer__bottom-part p{max-width:200px;margin-bottom:20px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */